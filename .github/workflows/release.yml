name: Build and Package

on:
  push:
    branches:
      - main

jobs:
  release:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: build Vite bundles
        run: yarn build

      - name: Get latest commit message
        id: commitmsg
        run: echo "msg=$(git log -1 --pretty=%B | tr -d '\n')" >> "$GITHUB_OUTPUT"

      - name: Determine publish flag
        id: publishflag
        run: |
          if [[ "${{ steps.commitmsg.outputs.msg }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "publish=false" >> "$GITHUB_OUTPUT"
          else
            echo "publish=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Prepare for app notarization (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p ~/private_keys/
          echo "${{ secrets.api_key }}" > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8

      - name: Build and conditionally publish Electron app
        run: |
          PUBLISH_FLAG=""
          if [[ "${{ steps.publishflag.outputs.publish }}" == "true" ]]; then
            PUBLISH_FLAG="--publish always"
          fi

          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            yarn electron-builder build --config electron-builder.config.cjs --mac --clean $PUBLISH_FLAG
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            yarn electron-builder build --config electron-builder.config.cjs --win --clean $PUBLISH_FLAG
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            yarn electron-builder build --config electron-builder.config.cjs --linux --clean $PUBLISH_FLAG
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          API_KEY_ID: ${{ secrets.api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}
